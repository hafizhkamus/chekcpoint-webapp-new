import { AccessibilityConfig } from '../../../model/accessibility.interface';
import { LoadingConfig, LoadingType } from '../../../model/loading-config.interface';
/**
 * Component with the loading spinner
 */
import * as ɵngcc0 from '@angular/core';
export declare class LoadingSpinnerComponent {
    /**
     * Object of type `LoadingConfig` exposed to the template.
     * It contains a field to choose a loading spinner.
     */
    loadingConfig: LoadingConfig;
    /**
     * Object of type `AccessibilityConfig` to init custom accessibility features.
     * For instance, it contains titles, alt texts, aria-labels and so on.
     */
    accessibilityConfig: AccessibilityConfig;
    /**
     * Enum of type `LoadingType` to choose the standard loading spinner.
     * Declared here to be used inside the template.
     */
    loadingStandard: LoadingType;
    /**
     * Enum of type `LoadingType` to choose the bars loading spinner.
     * Declared here to be used inside the template.
     */
    loadingBars: LoadingType;
    /**
     * Enum of type `LoadingType` to choose the circular loading spinner.
     * Declared here to be used inside the template.
     */
    loadingCircular: LoadingType;
    /**
     * Enum of type `LoadingType` to choose the dots loading spinner.
     * Declared here to be used inside the template.
     */
    loadingDots: LoadingType;
    /**
     * Enum of type `LoadingType` to choose the cube flipping loading spinner.
     * Declared here to be used inside the template.
     */
    loadingCubeFlipping: LoadingType;
    /**
     * Enum of type `LoadingType` to choose the circles loading spinner.
     * Declared here to be used inside the template.
     */
    loadingCircles: LoadingType;
    /**
     * Enum of type `LoadingType` to choose the explosing squares loading spinner.
     * Declared here to be used inside the template.
     */
    loadingExplosingSquares: LoadingType;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LoadingSpinnerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<LoadingSpinnerComponent, "ks-loading-spinner", never, { "loadingConfig": "loadingConfig"; "accessibilityConfig": "accessibilityConfig"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy1zcGlubmVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJsb2FkaW5nLXNwaW5uZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4Q0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY2Nlc3NpYmlsaXR5Q29uZmlnIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvYWNjZXNzaWJpbGl0eS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgTG9hZGluZ0NvbmZpZywgTG9hZGluZ1R5cGUgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9sb2FkaW5nLWNvbmZpZy5pbnRlcmZhY2UnO1xuLyoqXG4gKiBDb21wb25lbnQgd2l0aCB0aGUgbG9hZGluZyBzcGlubmVyXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIExvYWRpbmdTcGlubmVyQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBPYmplY3Qgb2YgdHlwZSBgTG9hZGluZ0NvbmZpZ2AgZXhwb3NlZCB0byB0aGUgdGVtcGxhdGUuXG4gICAgICogSXQgY29udGFpbnMgYSBmaWVsZCB0byBjaG9vc2UgYSBsb2FkaW5nIHNwaW5uZXIuXG4gICAgICovXG4gICAgbG9hZGluZ0NvbmZpZzogTG9hZGluZ0NvbmZpZztcbiAgICAvKipcbiAgICAgKiBPYmplY3Qgb2YgdHlwZSBgQWNjZXNzaWJpbGl0eUNvbmZpZ2AgdG8gaW5pdCBjdXN0b20gYWNjZXNzaWJpbGl0eSBmZWF0dXJlcy5cbiAgICAgKiBGb3IgaW5zdGFuY2UsIGl0IGNvbnRhaW5zIHRpdGxlcywgYWx0IHRleHRzLCBhcmlhLWxhYmVscyBhbmQgc28gb24uXG4gICAgICovXG4gICAgYWNjZXNzaWJpbGl0eUNvbmZpZzogQWNjZXNzaWJpbGl0eUNvbmZpZztcbiAgICAvKipcbiAgICAgKiBFbnVtIG9mIHR5cGUgYExvYWRpbmdUeXBlYCB0byBjaG9vc2UgdGhlIHN0YW5kYXJkIGxvYWRpbmcgc3Bpbm5lci5cbiAgICAgKiBEZWNsYXJlZCBoZXJlIHRvIGJlIHVzZWQgaW5zaWRlIHRoZSB0ZW1wbGF0ZS5cbiAgICAgKi9cbiAgICBsb2FkaW5nU3RhbmRhcmQ6IExvYWRpbmdUeXBlO1xuICAgIC8qKlxuICAgICAqIEVudW0gb2YgdHlwZSBgTG9hZGluZ1R5cGVgIHRvIGNob29zZSB0aGUgYmFycyBsb2FkaW5nIHNwaW5uZXIuXG4gICAgICogRGVjbGFyZWQgaGVyZSB0byBiZSB1c2VkIGluc2lkZSB0aGUgdGVtcGxhdGUuXG4gICAgICovXG4gICAgbG9hZGluZ0JhcnM6IExvYWRpbmdUeXBlO1xuICAgIC8qKlxuICAgICAqIEVudW0gb2YgdHlwZSBgTG9hZGluZ1R5cGVgIHRvIGNob29zZSB0aGUgY2lyY3VsYXIgbG9hZGluZyBzcGlubmVyLlxuICAgICAqIERlY2xhcmVkIGhlcmUgdG8gYmUgdXNlZCBpbnNpZGUgdGhlIHRlbXBsYXRlLlxuICAgICAqL1xuICAgIGxvYWRpbmdDaXJjdWxhcjogTG9hZGluZ1R5cGU7XG4gICAgLyoqXG4gICAgICogRW51bSBvZiB0eXBlIGBMb2FkaW5nVHlwZWAgdG8gY2hvb3NlIHRoZSBkb3RzIGxvYWRpbmcgc3Bpbm5lci5cbiAgICAgKiBEZWNsYXJlZCBoZXJlIHRvIGJlIHVzZWQgaW5zaWRlIHRoZSB0ZW1wbGF0ZS5cbiAgICAgKi9cbiAgICBsb2FkaW5nRG90czogTG9hZGluZ1R5cGU7XG4gICAgLyoqXG4gICAgICogRW51bSBvZiB0eXBlIGBMb2FkaW5nVHlwZWAgdG8gY2hvb3NlIHRoZSBjdWJlIGZsaXBwaW5nIGxvYWRpbmcgc3Bpbm5lci5cbiAgICAgKiBEZWNsYXJlZCBoZXJlIHRvIGJlIHVzZWQgaW5zaWRlIHRoZSB0ZW1wbGF0ZS5cbiAgICAgKi9cbiAgICBsb2FkaW5nQ3ViZUZsaXBwaW5nOiBMb2FkaW5nVHlwZTtcbiAgICAvKipcbiAgICAgKiBFbnVtIG9mIHR5cGUgYExvYWRpbmdUeXBlYCB0byBjaG9vc2UgdGhlIGNpcmNsZXMgbG9hZGluZyBzcGlubmVyLlxuICAgICAqIERlY2xhcmVkIGhlcmUgdG8gYmUgdXNlZCBpbnNpZGUgdGhlIHRlbXBsYXRlLlxuICAgICAqL1xuICAgIGxvYWRpbmdDaXJjbGVzOiBMb2FkaW5nVHlwZTtcbiAgICAvKipcbiAgICAgKiBFbnVtIG9mIHR5cGUgYExvYWRpbmdUeXBlYCB0byBjaG9vc2UgdGhlIGV4cGxvc2luZyBzcXVhcmVzIGxvYWRpbmcgc3Bpbm5lci5cbiAgICAgKiBEZWNsYXJlZCBoZXJlIHRvIGJlIHVzZWQgaW5zaWRlIHRoZSB0ZW1wbGF0ZS5cbiAgICAgKi9cbiAgICBsb2FkaW5nRXhwbG9zaW5nU3F1YXJlczogTG9hZGluZ1R5cGU7XG59XG4iXX0=