import { ElementRef, OnChanges, OnInit, Renderer2 } from '@angular/core';
import { Size } from '../model/size.interface';
/**
 * Directive to change the size of an element.
 */
import * as ɵngcc0 from '@angular/core';
export declare class SizeDirective implements OnInit, OnChanges {
    private renderer;
    private el;
    /**
     * Object of type `Size` to resize the element.
     */
    sizeConfig: Size;
    constructor(renderer: Renderer2, el: ElementRef);
    /**
     * Method ´ngOnInit´ to apply the style of this directive.
     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.
     * In particular, it's called only one time!!!
     */
    ngOnInit(): void;
    /**
     * Method ´ngOnChanges´ to apply the style of this directive.
     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.
     * In particular, it's called when any data-bound property of a directive changes!!!
     */
    ngOnChanges(): void;
    /**
     * Private method to change both width and height of an element.
     */
    private applyStyle;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SizeDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SizeDirective, "[ksSize]", never, { "sizeConfig": "sizeConfig"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2l6ZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsic2l6ZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBPbkluaXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2l6ZSB9IGZyb20gJy4uL21vZGVsL3NpemUuaW50ZXJmYWNlJztcbi8qKlxuICogRGlyZWN0aXZlIHRvIGNoYW5nZSB0aGUgc2l6ZSBvZiBhbiBlbGVtZW50LlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTaXplRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICAvKipcbiAgICAgKiBPYmplY3Qgb2YgdHlwZSBgU2l6ZWAgdG8gcmVzaXplIHRoZSBlbGVtZW50LlxuICAgICAqL1xuICAgIHNpemVDb25maWc6IFNpemU7XG4gICAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgZWw6IEVsZW1lbnRSZWYpO1xuICAgIC8qKlxuICAgICAqIE1ldGhvZCDCtG5nT25Jbml0wrQgdG8gYXBwbHkgdGhlIHN0eWxlIG9mIHRoaXMgZGlyZWN0aXZlLlxuICAgICAqIFRoaXMgaXMgYW4gQW5ndWxhcidzIGxpZmVjeWNsZSBob29rLCBzbyBpdHMgY2FsbGVkIGF1dG9tYXRpY2FsbHkgYnkgQW5ndWxhciBpdHNlbGYuXG4gICAgICogSW4gcGFydGljdWxhciwgaXQncyBjYWxsZWQgb25seSBvbmUgdGltZSEhIVxuICAgICAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogTWV0aG9kIMK0bmdPbkNoYW5nZXPCtCB0byBhcHBseSB0aGUgc3R5bGUgb2YgdGhpcyBkaXJlY3RpdmUuXG4gICAgICogVGhpcyBpcyBhbiBBbmd1bGFyJ3MgbGlmZWN5Y2xlIGhvb2ssIHNvIGl0cyBjYWxsZWQgYXV0b21hdGljYWxseSBieSBBbmd1bGFyIGl0c2VsZi5cbiAgICAgKiBJbiBwYXJ0aWN1bGFyLCBpdCdzIGNhbGxlZCB3aGVuIGFueSBkYXRhLWJvdW5kIHByb3BlcnR5IG9mIGEgZGlyZWN0aXZlIGNoYW5nZXMhISFcbiAgICAgKi9cbiAgICBuZ09uQ2hhbmdlcygpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFByaXZhdGUgbWV0aG9kIHRvIGNoYW5nZSBib3RoIHdpZHRoIGFuZCBoZWlnaHQgb2YgYW4gZWxlbWVudC5cbiAgICAgKi9cbiAgICBwcml2YXRlIGFwcGx5U3R5bGU7XG59XG4iXX0=