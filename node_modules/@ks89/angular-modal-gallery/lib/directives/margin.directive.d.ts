import { ElementRef, OnChanges, OnInit, Renderer2 } from '@angular/core';
/**
 * Directive to change margins of an element.
 */
import * as ɵngcc0 from '@angular/core';
export declare class MarginDirective implements OnInit, OnChanges {
    private renderer;
    private el;
    /**
     * String to set the margin of an element.
     */
    marginLeft: string;
    /**
     * String to set the margin of an element.
     */
    marginRight: string;
    /**
     * String to set the margin of an element.
     */
    marginTop: string;
    /**
     * String to set the margin of an element.
     */
    marginBottom: string;
    constructor(renderer: Renderer2, el: ElementRef);
    /**
     * Method ´ngOnInit´ to apply the style of this directive.
     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.
     * In particular, it's called only one time!!!
     */
    ngOnInit(): void;
    /**
     * Method ´ngOnChanges´ to apply the style of this directive.
     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.
     * In particular, it's called when any data-bound property of a directive changes!!!
     */
    ngOnChanges(): void;
    /**
     * Private method to change both width and height of an element.
     */
    private applyStyle;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MarginDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MarginDirective, "[ksMargin]", never, { "marginLeft": "marginLeft"; "marginRight": "marginRight"; "marginTop": "marginTop"; "marginBottom": "marginBottom"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFyZ2luLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJtYXJnaW4uZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0NBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBPbkluaXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBEaXJlY3RpdmUgdG8gY2hhbmdlIG1hcmdpbnMgb2YgYW4gZWxlbWVudC5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWFyZ2luRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICAvKipcbiAgICAgKiBTdHJpbmcgdG8gc2V0IHRoZSBtYXJnaW4gb2YgYW4gZWxlbWVudC5cbiAgICAgKi9cbiAgICBtYXJnaW5MZWZ0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogU3RyaW5nIHRvIHNldCB0aGUgbWFyZ2luIG9mIGFuIGVsZW1lbnQuXG4gICAgICovXG4gICAgbWFyZ2luUmlnaHQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBTdHJpbmcgdG8gc2V0IHRoZSBtYXJnaW4gb2YgYW4gZWxlbWVudC5cbiAgICAgKi9cbiAgICBtYXJnaW5Ub3A6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBTdHJpbmcgdG8gc2V0IHRoZSBtYXJnaW4gb2YgYW4gZWxlbWVudC5cbiAgICAgKi9cbiAgICBtYXJnaW5Cb3R0b206IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcihyZW5kZXJlcjogUmVuZGVyZXIyLCBlbDogRWxlbWVudFJlZik7XG4gICAgLyoqXG4gICAgICogTWV0aG9kIMK0bmdPbkluaXTCtCB0byBhcHBseSB0aGUgc3R5bGUgb2YgdGhpcyBkaXJlY3RpdmUuXG4gICAgICogVGhpcyBpcyBhbiBBbmd1bGFyJ3MgbGlmZWN5Y2xlIGhvb2ssIHNvIGl0cyBjYWxsZWQgYXV0b21hdGljYWxseSBieSBBbmd1bGFyIGl0c2VsZi5cbiAgICAgKiBJbiBwYXJ0aWN1bGFyLCBpdCdzIGNhbGxlZCBvbmx5IG9uZSB0aW1lISEhXG4gICAgICovXG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBNZXRob2QgwrRuZ09uQ2hhbmdlc8K0IHRvIGFwcGx5IHRoZSBzdHlsZSBvZiB0aGlzIGRpcmVjdGl2ZS5cbiAgICAgKiBUaGlzIGlzIGFuIEFuZ3VsYXIncyBsaWZlY3ljbGUgaG9vaywgc28gaXRzIGNhbGxlZCBhdXRvbWF0aWNhbGx5IGJ5IEFuZ3VsYXIgaXRzZWxmLlxuICAgICAqIEluIHBhcnRpY3VsYXIsIGl0J3MgY2FsbGVkIHdoZW4gYW55IGRhdGEtYm91bmQgcHJvcGVydHkgb2YgYSBkaXJlY3RpdmUgY2hhbmdlcyEhIVxuICAgICAqL1xuICAgIG5nT25DaGFuZ2VzKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogUHJpdmF0ZSBtZXRob2QgdG8gY2hhbmdlIGJvdGggd2lkdGggYW5kIGhlaWdodCBvZiBhbiBlbGVtZW50LlxuICAgICAqL1xuICAgIHByaXZhdGUgYXBwbHlTdHlsZTtcbn1cbiJdfQ==