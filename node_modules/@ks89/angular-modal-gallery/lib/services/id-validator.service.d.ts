/**
 * Service to check if the provided id is unique
 */
import * as ɵngcc0 from '@angular/core';
export declare class IdValidatorService {
    ids: Map<any, any>;
    /**
     * Method to check and reserve an id for the current instance of the library.
     * In this way, no other instances can use the same id.
     * @param galleryId number or undefined that represents the unique id of the gallery.
     * @return boolean true if success. false is never returned, instead an exception is thrown
     * @throws a error with a message if galleryId is neither unique, < 0 or an integer
     */
    checkAndAdd(galleryId: number | undefined): boolean;
    /**
     * Method to remove a reserved id. In this way you are able to use the id again for another instance of the library.
     * @param galleryId number or undefined that represents the unique id of the gallery.
     * @return boolean true if success. false is never returned, instead an exception is thrown
     * @throws a error with a message if galleryId is neither integer or < 0
     */
    remove(galleryId: number | undefined): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IdValidatorService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<IdValidatorService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWQtdmFsaWRhdG9yLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiaWQtdmFsaWRhdG9yLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTZXJ2aWNlIHRvIGNoZWNrIGlmIHRoZSBwcm92aWRlZCBpZCBpcyB1bmlxdWVcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSWRWYWxpZGF0b3JTZXJ2aWNlIHtcbiAgICBpZHM6IE1hcDxhbnksIGFueT47XG4gICAgLyoqXG4gICAgICogTWV0aG9kIHRvIGNoZWNrIGFuZCByZXNlcnZlIGFuIGlkIGZvciB0aGUgY3VycmVudCBpbnN0YW5jZSBvZiB0aGUgbGlicmFyeS5cbiAgICAgKiBJbiB0aGlzIHdheSwgbm8gb3RoZXIgaW5zdGFuY2VzIGNhbiB1c2UgdGhlIHNhbWUgaWQuXG4gICAgICogQHBhcmFtIGdhbGxlcnlJZCBudW1iZXIgb3IgdW5kZWZpbmVkIHRoYXQgcmVwcmVzZW50cyB0aGUgdW5pcXVlIGlkIG9mIHRoZSBnYWxsZXJ5LlxuICAgICAqIEByZXR1cm4gYm9vbGVhbiB0cnVlIGlmIHN1Y2Nlc3MuIGZhbHNlIGlzIG5ldmVyIHJldHVybmVkLCBpbnN0ZWFkIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd25cbiAgICAgKiBAdGhyb3dzIGEgZXJyb3Igd2l0aCBhIG1lc3NhZ2UgaWYgZ2FsbGVyeUlkIGlzIG5laXRoZXIgdW5pcXVlLCA8IDAgb3IgYW4gaW50ZWdlclxuICAgICAqL1xuICAgIGNoZWNrQW5kQWRkKGdhbGxlcnlJZDogbnVtYmVyIHwgdW5kZWZpbmVkKTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gcmVtb3ZlIGEgcmVzZXJ2ZWQgaWQuIEluIHRoaXMgd2F5IHlvdSBhcmUgYWJsZSB0byB1c2UgdGhlIGlkIGFnYWluIGZvciBhbm90aGVyIGluc3RhbmNlIG9mIHRoZSBsaWJyYXJ5LlxuICAgICAqIEBwYXJhbSBnYWxsZXJ5SWQgbnVtYmVyIG9yIHVuZGVmaW5lZCB0aGF0IHJlcHJlc2VudHMgdGhlIHVuaXF1ZSBpZCBvZiB0aGUgZ2FsbGVyeS5cbiAgICAgKiBAcmV0dXJuIGJvb2xlYW4gdHJ1ZSBpZiBzdWNjZXNzLiBmYWxzZSBpcyBuZXZlciByZXR1cm5lZCwgaW5zdGVhZCBhbiBleGNlcHRpb24gaXMgdGhyb3duXG4gICAgICogQHRocm93cyBhIGVycm9yIHdpdGggYSBtZXNzYWdlIGlmIGdhbGxlcnlJZCBpcyBuZWl0aGVyIGludGVnZXIgb3IgPCAwXG4gICAgICovXG4gICAgcmVtb3ZlKGdhbGxlcnlJZDogbnVtYmVyIHwgdW5kZWZpbmVkKTogYm9vbGVhbjtcbn1cbiJdfQ==