import { NgZone, ElementRef, AfterViewInit, OnDestroy, DoCheck, OnChanges, EventEmitter, SimpleChanges, KeyValueDiffers } from '@angular/core';
import { SwiperConfigInterface } from './swiper.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class SwiperDirective implements AfterViewInit, OnDestroy, DoCheck, OnChanges {
    private platformId;
    private zone;
    private elementRef;
    private differs;
    private defaults;
    private instance;
    private initialIndex;
    private configDiff;
    index: number;
    disabled: boolean;
    performance: boolean;
    config?: SwiperConfigInterface;
    indexChange: EventEmitter<number>;
    S_INIT: EventEmitter<any>;
    S_BEFOREDESTROY: EventEmitter<any>;
    S_SCROLL: EventEmitter<any>;
    S_PROGRESS: EventEmitter<any>;
    S_RESIZE: EventEmitter<any>;
    S_BREAKPOINT: EventEmitter<any>;
    S_BEFORERESIZE: EventEmitter<any>;
    S_KEYPRESS: EventEmitter<any>;
    S_SLIDERMOVE: EventEmitter<any>;
    S_SLIDECHANGE: EventEmitter<any>;
    S_SETTRANSLATE: EventEmitter<any>;
    S_SETTRANSITION: EventEmitter<any>;
    S_FROMEDGE: EventEmitter<any>;
    S_REACHEND: EventEmitter<any>;
    S_REACHBEGINNING: EventEmitter<any>;
    S_AUTOPLAY: EventEmitter<any>;
    S_AUTOPLAYSTART: EventEmitter<any>;
    S_AUTOPLAYSTOP: EventEmitter<any>;
    S_IMAGESREADY: EventEmitter<any>;
    S_LAZYIMAGELOAD: EventEmitter<any>;
    S_LAZYIMAGEREADY: EventEmitter<any>;
    S_SCROLLDRAGEND: EventEmitter<any>;
    S_SCROLLDRAGMOVE: EventEmitter<any>;
    S_SCROLLDRAGSTART: EventEmitter<any>;
    S_TAP: EventEmitter<any>;
    S_CLICK: EventEmitter<any>;
    S_DOUBLETAP: EventEmitter<any>;
    S_TOUCHEND: EventEmitter<any>;
    S_TOUCHMOVE: EventEmitter<any>;
    S_TOUCHSTART: EventEmitter<any>;
    S_TOUCHMOVEOPPOSITE: EventEmitter<any>;
    S_TRANSITIONEND: EventEmitter<any>;
    S_TRANSITIONSTART: EventEmitter<any>;
    S_SLIDEPREVTRANSITIONEND: EventEmitter<any>;
    S_SLIDEPREVTRANSITIONSTART: EventEmitter<any>;
    S_SLIDENEXTTRANSITIONEND: EventEmitter<any>;
    S_SLIDENEXTTRANSITIONSTART: EventEmitter<any>;
    S_SLIDECHANGETRANSITIONEND: EventEmitter<any>;
    S_SLIDECHANGETRANSITIONSTART: EventEmitter<any>;
    constructor(platformId: Object, zone: NgZone, elementRef: ElementRef, differs: KeyValueDiffers, defaults: SwiperConfigInterface);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private emit;
    swiper(): any;
    init(): void;
    update(): void;
    getIndex(real?: boolean): number;
    setIndex(index: number, speed?: number, silent?: boolean): void;
    prevSlide(speed?: number, silent?: boolean): void;
    nextSlide(speed?: number, silent?: boolean): void;
    stopAutoplay(reset?: boolean): void;
    startAutoplay(reset?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SwiperDirective, [null, null, null, null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SwiperDirective, "[swiper]", ["ngxSwiper"], { "disabled": "disabled"; "performance": "performance"; "index": "index"; "config": "swiper"; }, { "indexChange": "indexChange"; "S_INIT": "init"; "S_BEFOREDESTROY": "beforeDestroy"; "S_SCROLL": "scroll"; "S_PROGRESS": "progress"; "S_RESIZE": "resize"; "S_BREAKPOINT": "breakpoint"; "S_BEFORERESIZE": "beforeResize"; "S_KEYPRESS": "keyPress"; "S_SLIDERMOVE": "sliderMove"; "S_SLIDECHANGE": "slideChange"; "S_SETTRANSLATE": "setTranslate"; "S_SETTRANSITION": "setTransition"; "S_FROMEDGE": "fromEdge"; "S_REACHEND": "reachEnd"; "S_REACHBEGINNING": "reachBeginning"; "S_AUTOPLAY": "autoplay"; "S_AUTOPLAYSTART": "autoplayStart"; "S_AUTOPLAYSTOP": "autoplayStop"; "S_IMAGESREADY": "imagesReady"; "S_LAZYIMAGELOAD": "lazyImageLoad"; "S_LAZYIMAGEREADY": "lazyImageReady"; "S_SCROLLDRAGEND": "scrollDragEnd"; "S_SCROLLDRAGMOVE": "scrollDragMove"; "S_SCROLLDRAGSTART": "scrollDragStart"; "S_TAP": "swiperTap"; "S_CLICK": "swiperClick"; "S_DOUBLETAP": "swiperDoubleTap"; "S_TOUCHEND": "swiperTouchEnd"; "S_TOUCHMOVE": "swiperTouchMove"; "S_TOUCHSTART": "swiperTouchStart"; "S_TOUCHMOVEOPPOSITE": "swiperTouchMoveOpposite"; "S_TRANSITIONEND": "swiperTransitionEnd"; "S_TRANSITIONSTART": "swiperTransitionStart"; "S_SLIDEPREVTRANSITIONEND": "slidePrevTransitionEnd"; "S_SLIDEPREVTRANSITIONSTART": "slidePrevTransitionStart"; "S_SLIDENEXTTRANSITIONEND": "slideNextTransitionEnd"; "S_SLIDENEXTTRANSITIONSTART": "slideNextTransitionStart"; "S_SLIDECHANGETRANSITIONEND": "slideChangeTransitionEnd"; "S_SLIDECHANGETRANSITIONSTART": "slideChangeTransitionStart"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpcGVyLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJzd2lwZXIuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0VBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lLCBFbGVtZW50UmVmLCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3ksIERvQ2hlY2ssIE9uQ2hhbmdlcywgRXZlbnRFbWl0dGVyLCBTaW1wbGVDaGFuZ2VzLCBLZXlWYWx1ZURpZmZlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN3aXBlckNvbmZpZ0ludGVyZmFjZSB9IGZyb20gJy4vc3dpcGVyLmludGVyZmFjZXMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3dpcGVyRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95LCBEb0NoZWNrLCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgcGxhdGZvcm1JZDtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xuICAgIHByaXZhdGUgZGlmZmVycztcbiAgICBwcml2YXRlIGRlZmF1bHRzO1xuICAgIHByaXZhdGUgaW5zdGFuY2U7XG4gICAgcHJpdmF0ZSBpbml0aWFsSW5kZXg7XG4gICAgcHJpdmF0ZSBjb25maWdEaWZmO1xuICAgIGluZGV4OiBudW1iZXI7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgcGVyZm9ybWFuY2U6IGJvb2xlYW47XG4gICAgY29uZmlnPzogU3dpcGVyQ29uZmlnSW50ZXJmYWNlO1xuICAgIGluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcbiAgICBTX0lOSVQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQkVGT1JFREVTVFJPWTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TQ1JPTEw6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUFJPR1JFU1M6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUkVTSVpFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX0JSRUFLUE9JTlQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQkVGT1JFUkVTSVpFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX0tFWVBSRVNTOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NMSURFUk1PVkU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0xJREVDSEFOR0U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0VUVFJBTlNMQVRFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NFVFRSQU5TSVRJT046IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfRlJPTUVER0U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUkVBQ0hFTkQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUkVBQ0hCRUdJTk5JTkc6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQVVUT1BMQVk6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQVVUT1BMQVlTVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19BVVRPUExBWVNUT1A6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfSU1BR0VTUkVBRFk6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfTEFaWUlNQUdFTE9BRDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19MQVpZSU1BR0VSRUFEWTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TQ1JPTExEUkFHRU5EOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NDUk9MTERSQUdNT1ZFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NDUk9MTERSQUdTVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19UQVA6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQ0xJQ0s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfRE9VQkxFVEFQOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1RPVUNIRU5EOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1RPVUNITU9WRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19UT1VDSFNUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1RPVUNITU9WRU9QUE9TSVRFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1RSQU5TSVRJT05FTkQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfVFJBTlNJVElPTlNUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NMSURFUFJFVlRSQU5TSVRJT05FTkQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0xJREVQUkVWVFJBTlNJVElPTlNUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NMSURFTkVYVFRSQU5TSVRJT05FTkQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0xJREVORVhUVFJBTlNJVElPTlNUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NMSURFQ0hBTkdFVFJBTlNJVElPTkVORDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TTElERUNIQU5HRVRSQU5TSVRJT05TVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29uc3RydWN0b3IocGxhdGZvcm1JZDogT2JqZWN0LCB6b25lOiBOZ1pvbmUsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIGRpZmZlcnM6IEtleVZhbHVlRGlmZmVycywgZGVmYXVsdHM6IFN3aXBlckNvbmZpZ0ludGVyZmFjZSk7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBwcml2YXRlIGVtaXQ7XG4gICAgc3dpcGVyKCk6IGFueTtcbiAgICBpbml0KCk6IHZvaWQ7XG4gICAgdXBkYXRlKCk6IHZvaWQ7XG4gICAgZ2V0SW5kZXgocmVhbD86IGJvb2xlYW4pOiBudW1iZXI7XG4gICAgc2V0SW5kZXgoaW5kZXg6IG51bWJlciwgc3BlZWQ/OiBudW1iZXIsIHNpbGVudD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHByZXZTbGlkZShzcGVlZD86IG51bWJlciwgc2lsZW50PzogYm9vbGVhbik6IHZvaWQ7XG4gICAgbmV4dFNsaWRlKHNwZWVkPzogbnVtYmVyLCBzaWxlbnQ/OiBib29sZWFuKTogdm9pZDtcbiAgICBzdG9wQXV0b3BsYXkocmVzZXQ/OiBib29sZWFuKTogdm9pZDtcbiAgICBzdGFydEF1dG9wbGF5KHJlc2V0PzogYm9vbGVhbik6IHZvaWQ7XG59XG4iXX0=